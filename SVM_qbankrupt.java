import com.imsl.datamining.supportvectormachine.*;
import com.imsl.stat.*;

public class SVM_qbankrupt {

    public static void main(String[] args) throws Exception {

        SVClassification.VariableType[] varType = {
                SVClassification.VariableType.CATEGORICAL,
                SVClassification.VariableType.CATEGORICAL,
	            SVClassification.VariableType.CATEGORICAL,
	            SVClassification.VariableType.CATEGORICAL,
	            SVClassification.VariableType.CATEGORICAL,
	            SVClassification.VariableType.CATEGORICAL,
	            SVClassification.VariableType.CATEGORICAL
        };

        final int N = 250;				// total number of points
        final int N_TEST = 25;			// number of points to use for testing
        final int N_TRAIN = N - N_TEST;	// number of points to use for training
        final int N_CAT = 7;  			// number of columns in the data (count)
        final int CAT_COL = 6;			// category is in the 4th column (0-based)
        
        double[][] x_full = getData();

        // Split the data into training and test subsets
        RandomSamples rs = new RandomSamples(new Random(134567));
        int[] idx = rs.getSampleIndices(N_TEST, N-1);
        
        double[][] x_train = new double[N_TRAIN][N_CAT];
        double[][] x_test = new double[N_TEST][N_CAT];
        int ii = 0;	int j = 0;
        for (int i=0; i<N; i++) {
        	if (ii < N_TEST && i == idx[ii]) {
        		x_test[ii] = x_full[idx[ii]];
        		ii++;
        	} else {
        		x_train[j++] = x_full[i];
        	}
        }

        // Extract knownClass values from the training set and then the test set
        double[] knownClass = new double[N_TRAIN];
        for (int i=0; i<N_TRAIN; i++) {
            knownClass[i] = x_train[i][CAT_COL];
        }
        double[] knownClassT = new double[N_TEST];
        for (int i=0; i<N_TEST; i++) {
            knownClassT[i] = x_test[i][CAT_COL];
        }        

        // Construct a Support Vector Machine and train it using training data
        SVClassification svm = new SVClassification(x_train, CAT_COL, varType);
        svm.fitModel();

        // Classify and evaluate the training data
        double[] fittedClass = svm.predict();
        int[][] fittedClassErrors = svm.getClassErrors(knownClass, fittedClass);
        new com.imsl.math.PrintMatrix("fittedClassErrors").print(fittedClassErrors);            
        
        // Classify and evaluate the test data
        double[] predictedClass = svm.predict(x_test);
        int[][] predictedClassErrors = svm.getClassErrors(knownClassT, predictedClass);
        new com.imsl.math.PrintMatrix("classErrors").print(predictedClassErrors);                
    }

    private static double[][] getData() {
    	double[][] x = {
    			{2,2,1,1,1,2,0},
    			{0,0,1,1,1,0,0},
    			{1,1,1,1,1,1,0},
    			{2,2,2,2,2,2,0},
    			{0,0,2,2,2,0,0},
    			{1,1,2,2,2,1,0},
    			{2,2,1,2,2,2,0},
    			{2,2,2,1,1,2,0},
    			{2,2,1,2,1,2,0},
    			{2,2,1,1,2,2,0},
    			{2,2,2,2,1,2,0},
    			{2,2,2,1,2,2,0},
    			{0,0,1,2,2,0,0},
    			{0,0,2,1,1,0,0},
    			{0,0,1,2,1,0,0},
    			{0,0,1,2,1,0,0},
    			{0,0,1,1,2,0,0},
    			{0,0,2,2,1,0,0},
    			{0,0,2,1,2,0,0},
    			{1,1,1,2,2,1,0},
    			{1,1,2,1,1,1,0},
    			{1,1,1,2,1,1,0},
    			{1,1,1,1,2,1,0},
    			{1,1,2,2,1,1,0},
    			{1,1,2,1,2,1,0},
    			{2,0,1,1,1,2,0},
    			{0,2,1,1,1,0,0},
    			{2,0,1,1,1,0,0},
    			{2,0,2,2,2,2,0},
    			{0,2,2,2,2,0,0},
    			{2,0,2,2,2,0,0},
    			{0,0,1,2,2,2,0},
    			{2,0,2,1,1,2,0},
    			{0,2,1,2,1,2,0},
    			{0,2,1,1,2,0,0},
    			{2,0,2,2,1,0,0},
    			{0,2,2,1,2,1,0},
    			{1,0,1,2,2,1,0},
    			{1,2,2,1,1,1,0},
    			{1,1,1,2,1,2,0},
    			{1,1,1,1,2,0,0},
    			{0,1,2,2,2,0,0},
    			{1,0,2,1,2,0,0},
    			{1,2,2,1,2,0,0},
    			{0,0,2,1,2,2,0},
    			{0,0,2,2,2,2,0},
    			{2,1,2,2,2,0,0},
    			{1,2,2,2,2,0,0},
    			{1,0,0,1,2,2,0},
    			{1,2,2,1,2,2,0},
    			{2,1,2,1,2,0,0},
    			{1,0,1,1,2,2,0},
    			{1,0,1,1,2,0,0},
    			{1,0,1,1,2,1,0},
    			{1,1,0,2,2,1,0},
    			{1,1,0,2,2,2,0},
    			{1,2,2,2,2,2,0},
    			{1,2,1,1,1,2,0},
    			{0,2,0,2,2,1,0},
    			{0,0,2,2,2,1,0},
    			{1,1,1,2,2,1,0},
    			{1,1,1,2,2,2,0},
    			{2,1,1,2,2,2,0},
    			{1,0,0,2,2,1,0},
    			{2,0,0,2,2,1,0},
    			{1,1,0,2,2,2,0},
    			{2,1,2,0,2,0,0},
    			{2,1,0,1,2,0,0},
    			{2,2,2,1,2,0,0},
    			{2,1,2,0,2,0,0},
    			{2,1,1,2,2,0,0},
    			{2,2,1,2,2,2,0},
    			{2,1,2,1,2,2,0},
    			{2,2,1,1,2,0,0},
    			{1,1,1,1,1,2,0},
    			{2,2,1,2,2,0,0},
    			{1,2,0,2,1,2,0},
    			{1,2,1,2,1,2,0},
    			{2,1,0,1,2,1,0},
    			{1,2,0,2,1,2,0},
    			{2,1,1,1,2,1,0},
    			{1,2,1,2,1,2,0},
    			{1,2,2,2,2,2,0},
    			{2,1,1,0,2,2,0},
    			{1,2,1,1,1,2,0},
    			{1,0,0,0,2,2,0},
    			{0,2,0,2,2,1,0},
    			{2,0,1,0,1,2,0},
    			{0,0,2,2,2,1,0},
    			{1,1,1,2,2,1,0},
    			{1,1,1,2,2,2,0},
    			{2,1,1,2,2,2,0},
    			{1,0,0,2,2,1,0},
    			{1,1,0,2,2,2,0},
    			{2,1,2,0,2,0,0},
    			{2,2,2,1,2,0,0},
    			{2,1,2,0,2,0,0},
    			{2,1,1,2,2,0,0},
    			{2,2,1,2,2,2,0},
    			{2,1,2,1,2,2,0},
    			{2,2,1,1,2,0,0},
    			{1,1,1,1,1,2,0},
    			{2,2,1,2,2,0,0},
    			{1,2,0,2,1,2,0},
    			{2,1,1,1,2,1,0},
    			{1,2,1,2,1,2,0},
    			{1,2,0,2,1,2,0},
    			{1,2,1,2,1,2,0},
    			{2,2,1,1,1,2,0},
    			{0,0,1,1,1,0,0},
    			{1,1,1,1,1,1,0},
    			{2,2,2,2,2,2,0},
    			{0,0,2,2,2,0,0},
    			{1,1,2,2,2,1,0},
    			{2,2,1,2,2,2,0},
    			{2,2,2,1,1,2,0},
    			{2,2,1,2,1,2,0},
    			{2,2,1,1,2,2,0},
    			{2,2,2,2,1,2,0},
    			{2,2,2,1,2,2,0},
    			{0,0,1,2,2,0,0},
    			{0,0,2,1,1,0,0},
    			{0,0,1,2,1,0,0},
    			{0,0,1,2,1,0,0},
    			{0,0,1,1,2,0,0},
    			{0,0,2,2,1,0,0},
    			{0,0,2,1,2,0,0},
    			{1,1,1,2,2,1,0},
    			{1,1,2,1,1,1,0},
    			{1,1,1,2,1,1,0},
    			{1,1,1,1,2,1,0},
    			{1,1,2,2,1,1,0},
    			{1,1,2,1,2,1,0},
    			{2,0,1,1,1,2,0},
    			{0,2,1,1,1,0,0},
    			{2,0,1,1,1,0,0},
    			{2,0,2,2,2,2,0},
    			{0,2,2,2,2,0,0},
    			{2,0,2,2,2,0,0},
    			{0,0,1,2,2,2,0},
    			{2,0,2,1,1,2,0},
    			{0,2,1,2,1,2,0},
    			{0,2,1,1,2,0,0},
    			{1,0,0,0,0,1,1},
    			{2,0,0,0,0,0,1},
    			{0,2,0,0,0,0,1},
    			{1,2,0,1,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,0,0,1,0,1,1},
    			{0,0,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{0,0,0,1,0,2,1},
    			{0,0,0,1,0,0,1},
    			{0,0,1,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{2,0,0,0,1,1,1},
    			{1,0,0,0,0,1,1},
    			{1,0,0,0,0,1,1},
    			{1,1,0,0,0,2,1},
    			{1,0,0,0,0,0,1},
    			{2,1,0,0,0,1,1},
    			{2,0,0,0,0,2,1},
    			{2,1,0,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{0,1,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{1,1,0,0,0,0,1},
    			{1,1,0,0,0,0,1},
    			{2,2,0,0,0,0,1},
    			{1,2,0,0,0,0,1},
    			{2,1,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,1,0,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{0,2,0,0,0,0,1},
    			{1,2,0,1,0,0,1},
    			{0,0,0,2,0,2,1},
    			{0,0,0,0,0,0,1},
    			{0,0,0,1,0,1,1},
    			{0,0,0,2,0,0,1},
    			{0,0,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{0,0,0,1,0,2,1},
    			{0,0,0,1,0,0,1},
    			{0,0,1,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{2,0,0,0,1,1,1},
    			{2,0,0,0,1,1,1},
    			{1,0,0,0,0,1,1},
    			{0,0,0,0,0,1,1},
    			{0,2,0,0,0,0,1},
    			{1,2,0,1,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,0,0,1,0,1,1},
    			{0,0,0,2,0,0,1},
    			{0,0,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{0,0,0,1,0,2,1},
    			{2,0,0,0,0,2,1},
    			{2,1,0,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{0,1,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{1,1,0,0,0,0,1},
    			{1,1,0,0,0,0,1},
    			{0,0,0,1,0,0,1},
    			{0,0,1,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,1,2,1,0,2,1},
    			{2,0,0,0,0,0,1},
    			{0,1,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{1,1,0,0,0,0,1},
    			{1,1,0,0,0,2,1},
    			{1,0,0,0,0,0,1},
    			{2,1,0,0,0,1,1},
    			{2,0,0,0,0,2,1},
    			{2,1,0,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{0,1,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{1,1,0,0,0,0,1},
    			{1,1,0,0,0,0,1},
    			{1,2,0,0,0,0,1},
    			{2,1,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,1,0,0,0,0,1},
    			{1,0,0,0,0,1,1},
    			{2,0,0,0,0,0,1},
    			{0,2,0,0,0,0,1},
    			{1,2,0,1,0,0,1},
    			{0,0,0,0,0,0,1},
    			{0,0,0,1,0,1,1},
    			{0,0,0,0,0,2,1},
    			{0,0,0,0,0,1,1},
    			{0,0,0,1,0,2,1},
    			{0,0,0,1,0,0,1},
    			{0,0,1,0,0,0,1},
    			{2,0,0,0,0,0,1},
    			{1,0,0,0,0,0,1},
    			{0,0,0,0,0,0,1},
    			{2,0,0,0,1,1,1}
    	};
    	return x;
   	} 
}
